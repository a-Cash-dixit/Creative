import Head from "next/head";
import Message from "../components/Message";
import { auth, db } from "../utils/firebase";
import react from "react";
import { FaComments } from "react-icons/fa";
import { FcLikePlaceholder, FcLike } from "react-icons/fc";
import { TbMessageCircle2 } from "react-icons/tb";
import {
  collection,
  doc,
  orderBy,
  query,
  onSnapshot,
  updateDoc,
  arrayUnion,
  arrayRemove,
} from "firebase/firestore";
import Link from "next/link";
export default function Home() {
  const [allPosts, setallPosts] = react.useState([]);
  const getPosts = async () => {
    const collectionRef = collection(db, "posts");
    const q = query(collectionRef, orderBy("timestamp", "desc"));
    const unsubscribe = onSnapshot(q, (snapshot) => {
      setallPosts(
        snapshot.docs.map((doc) => ({
          ...doc.data(),
          id: doc.id,
        }))
      );
    });
    return unsubscribe;
  };
  react.useEffect(() => {
    getPosts();
  }, []);
  //Like the post
  const likePost = async (id) => {
    const docRef = doc(db, "posts", id);
    await updateDoc(docRef, {
      likes: arrayUnion({
        userId: auth.currentUser.uid,
      }),
    });
    return ;
  };
  return (
    <div>
      <Head>
        <title>Bhagwa</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        {allPosts.map((post) => (
          <Message key={post.id} {...post}>
            <div
              style={{
                display: "flex",
                width: "34%",
                justifyContent: "space-between",
              }}
            >
              <Link
                href={{ pathname: `${post.id}`, query: { ...post } }}
                style={{ display: "flex" }}
              >
                <TbMessageCircle2 size={20} color="white"></TbMessageCircle2>
              </Link>
              <Link
                href={{ pathname: `${post.id}`, query: { ...post } }}
                style={{
                  display: "flex",
                  color: "#AAB8C2",
                  textDecorationLine: "none",
                }}
              >
                {post.comments && `${post.comments.length}`}
              </Link>
            </div>
            <div
              style={{
                display: "flex",
                width: "30%",
                justifyContent: "space-between",
                color: "#AAB8C2",
              }}
            >
              <FcLike onClick={() => likePost(post.id)} size={20}></FcLike>
              {post.likes && `${post.likes.length}`}
            </div>
          </Message>
        ))}
      </div>
    </div>
  );
}
